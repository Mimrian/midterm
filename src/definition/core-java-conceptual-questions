Please answer the below core-java Questions:

What is programing language?
A.A programming language is a computer language that is used by programmers
to communicate with computers. There are different programming languages such as Java, c, c++, Python etc.
Programming language is a set of instructions written in any of these specific languages to perform a
specific task. For example, we can use Java to write codes and create a simple calculator.

What jdk contains or composed of and define each components?
A.
The Java Development Kit (JDK) is a software development environment that is used to develop Java applications.
It is composed of Java Runtime Environment (JRE), an interpreter/loader (java), a compiler (javac),
an archiver (jar), and other tools.
The Java Development Kit provides developers with the tools necessary to develop applications.

JRE- Java runtime environment. Contains the environment components required to run Java.
 These are the Java Virtual Machine (JVM) and Java classes.
Javac- it is a compiler that converts Java source code into bytecode or platform independent file.
JVM- its called Java virtual machine which allows Java program to run on any platform
Jar-A Java Archive, or JAR file, contains all of the various components that make up a self-contained,
executable Java application, deployable Java applet or, most commonly, a Java library to which any Java
Runtime Environment can link.

What is IDE?
A. An integrated development environment (IDE) is a software application that helps
programmers develop software code efficiently. For example, Eclipse, IntelliJ

What are the IDEs available in the market to support java?
A. Popular IDEs in the market  are Eclipse, IntelliJ, Visual Studio, Pycharm etc.

Explain the entire java life cycle.

There are three main stages in the life cycle of a java program. They are:

Editing the program
Compiling the source code
Executing the byte code

First, we will start with typing the program in a text-editor for example, Eclipse or IntelliJ.
After completing editing of the program, we have to save the file with .java extension. For example, Pnt.java

Second step is compilation. In this stage we use javac which is a compiler in Java.
The input to the compiler is Java source code which is available in our file named Sample.java.
The output of the compiler is machine independent or platform independent code which is known as bytecode which we human don't understand.
The file which is generated after compilation is .class file. As per my example, the bytecode file will be Pnt.class

Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU or
other application softwares such as cell phone apps and we will see the desired output.

what is class?
Class is a blueprint of creating objects. For example, if we want to build a house, the class will be the
prototype of the house. Since we can create many houses from the same prototype, we can say we can create
objects from a class.

What is object?
Ans. An object is called an instance of a class. For example, if Bicycle is a class
then MountainBicycle, SportsBicycle, TouringBicycle, etc can be considered as objects of the class.

What is the entry point of an application?
Ans. The main method is the entry point of an application
Why main is static?
Ans. In Java, execution starts from main method by JVM. When JVM executes main() at that time,
the class which contains main() is not instantiated so we can't call a nonstatic method without
the reference of it's object. Therefore, when we use static modifier so that the JVM can directly call them.

Which class is the superclass of all classes?
Ans. Object class is the superclass of all classes
What is difference between path and classpath variables?
Ans.Path is set for using java tool in the java program
and classpath are used for use predefined class in the program for example, to use
scanner class we have to set classpath.
What is the difference between an Interface and Abstract class?
Ans. The key difference between an Interface and Abstract class is, an Interface can only have unimplemented
methods, whereas an abstract class can have both implemented and unimplimented methods.
Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
No, we cannot make an Object from an Interface and Abstract class. To use an interface,
other classes must implement it. We use the 'implements' keyword to implement an interface from the other class
Now in Abstract class we create a child class that extends to the parent abstract class. To get access to
the parent class we use the 'extends' keyword and also need to create an object under the main method.
and will get access to all the implemented methods of the parent class as well as any abstract method
what is Access Specifier?
Ans.In Java, access Specifier or modifiers are used to set the accessibility (visibility) of
classes, interfaces, variables, methods, constructors, data members, and the setter methods.
What is OOP ? Define each feature of java OOP.
Ans.OOP is object oriented programming. It is a programming paradigm that revolves around the concept of objects.
OOP uses objects as a primary source to implement what is to happen in the code.
The main basic feature of OOP are abstraction, encapsulation, inheritance and polymorphism
Abstraction: Data Abstraction is the property by virtue of which only the essential details are displayed to the user.
The non-essential units are not displayed to the user.
Encapsulation:
It is defined as the wrapping up of data under a single unit. It is the mechanism that binds together the code and the
data it manipulates. Another way to think about encapsulation is that it is a protective shield that
prevents the data from being accessed by the code outside this shield.
Inheritance: It is the mechanism in Java by which one class is allowed to inherit the features (fields and
methods) of another class. We are achieving inheritance by using extends keyword. Inheritance is also
known as “is-a” relationship.
Polymorphism: It refers to the ability of object-oriented programming languages to differentiate between
entities with the same name efficiently. This is done by Java with the help of the signature and
declaration of these entities. The ability to appear in many forms is called polymorphism.
What is Java Package and which package is imported by default?
Ans.It refers to the ability of object-oriented programming languages to differentiate between entities with the same
name efficiently. This is done by Java with the help of the signature and declaration of these entities. The ability
to appear in many forms is called polymorphism.
What is API? Name list of API that you have used so far.
Ans. API stands for Application Programming Interface. It represents the interface or contract between applications
with distinct functions.
Does java support multiple inheritance, explain why or why not?
Ans. Java doesn't support multiple inheritance, for example, a child cannot inherit from father and mother
at the same time. This is the ambiguity problem faced by the compiler hence multiple inheritance is not supported in Java.
This is known as Diamond problem.
What is method overloading and when it happens?
Ans.If a class has multiple methods having same name but different in parameters,it is known as Method Overloading
Explain exceptions in java and how to handle it.
Ans.Exception Handling in Java is one of the effective means to handle the runtime errors so that the
regular flow of the application can be preserved. Java Exception Handling is a mechanism to handle runtime errors
such as ClassNotFoundException, IOException, SQLException, RemoteException, etc.
To handle exceptions, we have the following ways: try...catch block
                                                  finally block
                                                  throw and throws keyword
What is static keyword in java? How it has been used in variables and methods ?
Ans.The most important reason why static keywords are heavily used in Java is to efficiently manage memory.
Generally, if we want to access variables or methods inside a class, we first need to create an instance or
object of that class. However, there might be situations where we want to access only a couple of methods or
variables of a class and we don’t want to create a new instance for that class just for accessing these members.
This is where you can use the static keyword in Java. In that case we don't need to create object, we can just
call the methods or variables using the class name. For example, if Dog is a class and has a method called bark(),
we can simply call Dog.bark();
What is final and how it has been used variables and methods?
Ans. The final keyword is a non-access modifier used for classes, attributes and methods, which makes them
non-changeable (impossible to inherit or override).A variable that is declared as a final variable is a
constant throughout the program and its value cannot be changed ever. Method that is declared final cannot
be overridden by any other subclasses. A class that is declared final cannot be inherited by any other class.
What is final, finally and finalize?
Ans.Final is a keyword used in Java to restrict the modification of a variable, method, or class.
Finally is a block used in Java to ensure that a section of code is always executed, even if an exception
is thrown. Finalize is a method in Java used to perform cleanup processing on an object before it is garbage
collected
What is a constructor ?
Ans. A constructor in Java is similar to a method that is invoked when an object of the class is created.
A constructor must  have the same name as that of the class and it doesn't have a return type.
Can we have multiple constructors in a class?
Ans.A class can have multiple constructors that differ in the number and/or type of their parameters. It's not
possible to have two constructors with the exact same parameters.
If we don't have a constructor declared, what is called during the object creation?
Ans. If we don't declare, the Java compiler will create a default constructor in the byte code with an empty
 argument.
What is "this" keyword in java ?
Ans.The "this" keyword can be used to refer current class instance variable.
What is "super" keyword in java? How many possible way can you use?
Ans.The super keyword refers to superclass (parent) objects. It is used to call superclass methods, and to
access the superclass constructor. The most common use of the super keyword is to eliminate the confusion
between superclasses and subclasses that have methods with the same name.
What is JVM stand for ?
Ans. Java Virtual Machine
Is JVM platform independent?
Ans. Yes,Java is platform independent
What version of java are you using?
java 17.0.6 2023-01-17 LTS
What is JAR stand for ?
JAR stands for Java ARchive
What is the difference between JDK and JVM?
Ans.JDK is a software development kit and JVM converts byte codes into machine specific code
What is the difference between JVM and JRE?
Ans. Java Runtime Environment, or JRE, is a set of software tools responsible for execution of the Java
program or application on our system. JVM or java virtual machine is needed to execute java bytecode and is
necessary in both JDK and JRE
What is compile time and run time?
Runtime and compile time are programming terms that refer to different stages of software program development.
In order to create a program, a developer first writes source code, which defines how the program will function.
Small programs may only contain a few hundred lines of source code, while large programs may contain hundreds
of thousands of lines of source code. The source code must be compiled into machine code in order to become
and executable program. The compiler does this compilation process and is referred to as compile time.
When an application is running, it is called runtime.
What is heap?
Heap space is used for the dynamic memory allocation of Java objects and JRE classes at runtime. New objects
 are always created in heap space, and the references to these objects are stored in stack memory.
How java manage it's memory?
In Java, memory management is the process of allocation and de-allocation of objects, called Memory
management. Java does memory management automatically. Java uses an automatic memory management system called
a garbage collector. Thus, we are not required to implement memory management logic in our application.
What is the difference between String, StringBuffer and StringBuilder?
Ans.String is a Class in Java and is immutable. The differences between them are:
String is immutable whereas StringBuffer and StringBuilder are mutable classes.
StringBuffer is thread-safe and synchronized whereas StringBuilder is not. That’s why StringBuilder is faster
than StringBuffer.
String concatenation operator (+) internally uses StringBuffer or StringBuilder class.
For String manipulations in a non-multi threaded environment, we should use StringBuilder or StringBuffer class.
What is Singleton class?
Ans.a java singleton class is a class that can have only one object (an instance of the class) at a time.
The Singleton's purpose is to control object creation, limiting the number of objects to only one.
What is Serialization and Deserialization?
Ans. Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the
reverse process where the byte stream is used to recreate the actual Java object in memory.
when to use transient variable in java?
Ans. Transient variables play an important role in preventing objects from being serialized. The transient keyword can
be used to make any variable transient.
Difference between while and do..while loop?
Ans.The while loop in java executes one or more statements after testing the loop continuation condition at the
start of each iteration. The do-while loop, however, tests the loop continuation condition after the first
iteration has completed.
What is Enum?
Ans.An enum is a data type that can be created by a Java programmer to represent a small collection of possible values.
a special data type that enables for a variable to be a set of predefined constants. The variable must be equal to one of the
values that have been predefined for it. Common examples include compass directions (values of NORTH, SOUTH,
EAST, and WEST) and the days of the week.An enum is a special "class" that represents a group of constants
 (unchangeable variables, like final variables)
What is Iterator?
Ans. Iterator in Java is an object used to cycle through arguments or elements present in a collection.It can
be used to loop through collections, like ArrayList and HashSet. It is called an "iterator" because "iterating"
is the technical term for looping. To use an Iterator, you must import it from the java.util package.
Which one will take more memory, an int or Integer?
Ans. Integer will take more memory.  int is a primitive data type and takes 32 bits(4 bytes) to store. On other
hand, Integer is an object which takes 128 bits (16 bytes) to store its int value.
Why is String Immutable in Java?
Ans.A string is an immutable object which means we cannot change them after creating the objects.The String is immutable
in Java because of the security, synchronization and concurrency, caching, and class loading.
What is constructor chaining in Java?
Ans.Constructor chaining is the process of invoking a series of constructors within the same class or by the
child class's constructors. In Java programming, constructor chaining generally happens as a result of the
Inheritance process.
The difference between Serial and Parallel Garbage Collector?
Ans. The only difference between serial and parallel garbage collector is that serial garbage collector uses
a single thread for garbage collection process while the parallel garbage collector uses multiple threads
for the garbage collection. Parallel GC can use multiple CPUs to speed up the application throughput.
What is JIT stands for?
Ans.JIT stands for Just-in-Time which means that code gets compiled when it is needed, not before runtime.
This is beneficial because the compiler can generate code that is optimised for your particular machine.
Explain Java Heap space and Garbage collection?
Ans. Java objects reside in an area called the heap. The heap is created when the JVM starts up and may
increase or decrease in size while the application runs. When the heap becomes full, garbage is collected.
During the garbage collection objects that are no longer used are cleared, thus making space for new objects.
Can you guarantee the garbage collection process?
Ans.JVM decides when to perform the garbage collection. You can also request to the JVM to run the garbage
collector. But there is no guarantee under any conditions that the JVM will comply. JVM runs the garbage
collector if it senses that memory is running low.
What is the difference between stack and heap in Java?
Ans. The major difference between Stack memory and heap memory is that the stack is used to store the order of
method execution and local variables while the heap memory stores the objects and it uses dynamic memory
allocation and deallocation.
What is reflection in java and why is it useful?
Reflection is a feature in the Java programming language. It allows an executing Java program to examine or
"introspect" upon itself, and manipulate internal properties of the program. For example, it's possible for
a Java class to obtain the names of all its members and display them.It is useful to get the information about :

Class : To know the name of the class to which that particular object belongs we can use the getClass() method.
Constructors : To know the public constructors of the class to which that particular object belongs we can use the getConstructors() method.
Methods : To know the public methods of the class to which that particular object belongs we can use the getMethods() method.
what is multithreading in java?
Multithreading enables us to run multiple threads concurrently. For example in a web browser, we can have one
thread which handles the user interface, and in parallel we can have another thread which fetches the data to
be displayed. So multithreading improves the responsiveness of a system.
What is the use of synchronization in Java?
Ans. Synchronization in java is the capability to control the access of multiple threads to any shared resource.
It helps to prevent thread interference and memory inconsistency error.
What is Framework?
Ans.A framework is a structure that you can build software on. It serves as a foundation, so you're not starting
entirely from scratch.
What are the testing Framework available in java?
Ans. Testing frameworks available in Java are Selenium, JUnit, TestNG etc.
Difference between jUnit and testNG?
Ans.JUnit does not include any dependency tests. TestNG includes dependency tests. JUnit is a open source
framework whereas TestNG is a Java based framework.
What are the dependencies for this project?
Ans. This scenario, task A must finish before task B can begin and this is the most common
 example of a project dependency and is generally the most straightforward. For example, a fabrication team
 cannot begin building until the final design has been approved.
what is dependency injection in java?
Ans. What is meant by dependency injection?
In software design, dependency injection is the process of supplying a resource that a given piece of code
requires. The required resource, which is often a component of the application itself,
is called a dependency.
What is static binding and dynamic binding?
Ans.The static binding uses Type information for binding while Dynamic binding uses Objects to resolve to bind.
Static binding happens at compile-time while dynamic binding happens at runtime.








